-
    type: content_type_group
    mode: create
    identifier: xyz  # Identifier/name of new content type group
    creation_date: 123 # Optional, custom creation date for the content type group (timestamp)
    references: # Optional
        # short syntax:
        referenceId: attributeId # (possible values and meaning are explained for the 'long syntax')
        # long syntax:
        -
            identifier: referenceId # A string used to identify the reference
            attribute: attributeId # An attribute to get the value of for the reference.
                                   # Supports content type group id and identifier
                                   # The shorthand 'id' can be used instead of 'content_type_group_id'
            overwrite: true|false # Optional, default false. If not set, and the reference already exists, an exception is thrown
    if: # Optional. If set, the migration step will be skipped unless the condition is matched
        "reference:_ref_name": # name of a reference to be used for the test
            _operator_: value # allowed operators: eq, gt, gte, lt, lte, ne, count, length, regexp, satisfies

-
    type: content_type_group
    mode: update
    match: # only one of the following keys is allowed
        id: x # int|int[] The Id of the content type group(s) to update.
        identifier: y # string|string[] The Identifier of the content type group(s) to update
        all: ~ # matches ALL content type groups
        or: # match any of the conditions below. *NB:* less efficient that using the array notation for a single condition
            -
                _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
            -
                _condition_: value # where _condition can be any of ones specified above, including 'and' and 'or'
        and: # match all of the conditions below
            -
                _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
            -
                _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
        not: # matches elements NOT satisfying the wrapped condition
            _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
    match_tolerate_misses: false # optional. Do not fail the execution if there is no item matching, when matching by id or identifier
    identifier: xyz  # Identifier/name of new content type group
    modification_date: 123 # Optional, custom modification date for the content type group (timestamp)
    references: # Optional
        # short syntax:
        referenceId: attributeId # (possible values and meaning are explained for the 'long syntax')
        # long syntax:
        -
            identifier: referenceId # A string used to identify the reference
            attribute: attributeId # An attribute to get the value of for the reference.
                                   # Supports content type group id and identifier
                                   # The shorthand 'id' can be used instead of 'content_type_group_id'
                                   # 'count' can be used to set a reference to the number of items matched
            overwrite: true|false # Optional, default false. If not set, and the reference already exists, an exception is thrown
    expect: one|any|many # Optional. If set, the number of matched items will be validated, and the type of values set to created references will change
                         # 'one': only one element should be matched; reference values will be scalars
                         # 'any': zero or more element should be matched; reference values will be arrays
                         # 'many': one or more element should be matched; reference values will be arrays
    if: # Optional. If set, the migration step will be skipped unless the condition is matched
        "reference:_ref_name": # name of a reference to be used for the test
            _operator_: value # allowed operators: eq, gt, gte, lt, lte, ne, count, length, regexp, satisfies

-
    # Delete one (or more) content type group
    type: content_type_group
    mode: delete
    match: # only one of the following keys is allowed
        id: x # int|int[] The Id of the content type group(s) to update.
        identifier: y # string|string[] The Identifier of the content type group(s) to update
        all: ~ # matches ALL content type groups
        or: # match any of the conditions below. *NB:* less efficient that using the array notation for a single condition
            -
                _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
            -
                _condition_: value # where _condition can be any of ones specified above, including 'and' and 'or'
        and: # match all of the conditions below
            -
                _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
            -
                _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
        not: # matches elements NOT satisfying the wrapped condition
            _condition_: value # where _condition_ can be any of ones specified above, including 'and' and 'or'
    match_tolerate_misses: false # optional. Do not fail the execution if there is no item matching, when matching by id or identifier
    references: # Optional. See above for allowed values
    expect: one|any|many # Optional. If set, the number of matched items will be validated, and the type of values set to created references will change
                         # 'one': only one element should be matched; reference values will be scalars
                         # 'any': zero or more element should be matched; reference values will be arrays
                         # 'many': one or more element should be matched; reference values will be arrays
    if: # Optional. If set, the migration step will be skipped unless the condition is matched
        "reference:_ref_name": # name of a reference to be used for the test
            _operator_: value # allowed operators: eq, gt, gte, lt, lte, ne, count, length, regexp, satisfies

-
    type: content_type_group
    mode: load
    match: # See docs above for update and delete
    match_tolerate_misses: # Optional. See above for allowed values
    references: # Optional. See above for allowed values
    expect: # Optional. See above for allowed values
    if:  # Optional. See above for allowed values
